openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://test-host-tmanasyan-2.ru-central1-a.internal:8081
  description: Generated server url
paths:
  /rules:
    get:
      tags:
        - Rules
      summary: List all rules
      operationId: getRuleInfos
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RuleInfo'
    post:
      tags:
        - Rules
      summary: Submit rule
      operationId: addRule
      parameters:
        - name: ruleText
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int64
  /rules/{ruleId}:
    get:
      tags:
        - Rules
      summary: Get detailed info about rule
      operationId: getInfo
      parameters:
        - name: ruleId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleInfo'
    delete:
      tags:
        - Rules
      summary: Delete rule
      operationId: deleteRule
      parameters:
        - name: ruleId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
  /rules/{ruleId}/start:
    post:
      tags:
      - Rules
      summary: Start/continue rule
      operationId: start
      parameters:
      - name: ruleId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /rules/{ruleId}/stop:
    post:
      tags:
      - Rules
      summary: Stop rule
      operationId: stop
      parameters:
      - name: ruleId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /cmdlets/{cmdletId}/stop:
    post:
      tags:
      - Cmdlets
      summary: Stop cmdlet
      operationId: stopCmdlet
      parameters:
      - name: cmdletId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /cmdlets:
    post:
      tags:
      - Cmdlets
      summary: Submit cmdlet
      operationId: submitCmdlet
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int64
    get:
      tags:
        - Cmdlets
      summary: List cmdlets
      operationId: getCmdletInfos
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CmdletInfo'
  /rules/{ruleId}/cmdlets:
    get:
      tags:
      - Rules
      summary: List all cmdlets of specified rule
      operationId: getCmdlets
      parameters:
      - name: ruleId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CmdletInfo'
  /rules/{ruleId}/cmdlets/{pageIndex}/{numPerPage}/{orderBy}/{isDesc}:
    get:
      tags:
      - Rules
      summary: List all cmdlets of specified rule
      operationId: getCmdlets_1
      parameters:
      - name: ruleId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: pageIndex
        in: path
        required: true
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: numPerPage
        in: path
        required: true
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: orderBy
        in: path
        required: true
        schema:
          type: array
          items:
            type: string
      - name: isDesc
        in: path
        required: true
        schema:
          type: array
          items:
            type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CmdletGroup'
  /cmdlets/{cmdletId}:
    get:
      tags:
      - Cmdlets
      summary: Get detailed info about cmdlet
      operationId: getCmdletInfo
      parameters:
      - name: cmdletId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CmdletInfo'

  /cluster/primary/ssmnodescmdletmetrics:
    get:
      tags:
      - Cluster
      summary: Get cmdlet metrics from SSM nodes
      operationId: getSsmNodesCmdletMetrics
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NodeCmdletMetrics'
  /cluster/primary/hotfiles:
    get:
      tags:
      - Cluster
      summary: Get list of hot files for the last hour
      operationId: getHotFiles
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileAccessInfo'
  /cluster/primary/cachedfiles:
    get:
      tags:
      - Cluster
      summary: Get list of cached files
      operationId: getCachedFiles
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CachedFileStatus'
  /actions/{actionId}:
    get:
      tags:
      - Actions
      summary: Get detailed info about action
      operationId: getActionInfo
      parameters:
      - name: actionId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionInfo'
  /actions/type/{actionLimit}/{actionName}:
    get:
      tags:
      - Actions
      summary: Get the last created instances of action
      operationId: getLastActions
      parameters:
      - name: actionLimit
        in: path
        required: true
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: actionName
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActionInfo'
  /actions/search/{search}/{pageIndex}/{numPerPage}/{orderBy}/{isDesc}:
    get:
      tags:
      - Actions
      summary: Find actions by query
      operationId: searchActions
      parameters:
      - name: search
        in: path
        required: true
        schema:
          type: string
      - name: pageIndex
        in: path
        required: true
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: numPerPage
        in: path
        required: true
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: orderBy
        in: path
        required: true
        schema:
          type: array
          items:
            type: string
      - name: isDesc
        in: path
        required: true
        schema:
          type: array
          items:
            type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionGroup'
  /actions/list/{pageIndex}/{numPerPage}/{orderBy}/{isDesc}:
    get:
      tags:
      - Actions
      summary: List actions
      operationId: getActions
      parameters:
      - name: pageIndex
        in: path
        required: true
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: numPerPage
        in: path
        required: true
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: orderBy
        in: path
        required: true
        schema:
          type: array
          items:
            type: string
      - name: isDesc
        in: path
        required: true
        schema:
          type: array
          items:
            type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionGroup'
  /actions/list/{actionLimit}/{ruleId}:
    get:
      tags:
      - Actions
      summary: List actions of rule
      operationId: getActions_1
      parameters:
      - name: actionLimit
        in: path
        required: true
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: ruleId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActionInfo'
  /actions/filelist/{ruleId}/{pageIndex}/{numPerPage}:
    get:
      tags:
      - Actions
      summary: List file actions of rule
      operationId: getFileActions
      parameters:
      - name: ruleId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: pageIndex
        in: path
        required: true
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: numPerPage
        in: path
        required: true
        schema:
          minimum: 0
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedFileActionGroup'
  /actions/filelist/{actionLimit}/{ruleId}:
    get:
      tags:
      - Actions
      summary: List file actions of rule
      operationId: getFileActions_1
      parameters:
      - name: ruleId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: actionLimit
        in: path
        required: true
        schema:
          minimum: 0
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DetailedFileAction'
components:
  schemas:
    StandbyServerInfo:
      type: object
      properties:
        id:
          type: string
        host:
          type: string
        port:
          type: integer
          format: int32
        executorType:
          type: string
          enum:
          - LOCAL
          - REMOTE_SSM
          - AGENT
        location:
          type: string
    AgentInfo:
      type: object
      properties:
        id:
          type: string
        host:
          type: string
        port:
          type: integer
          format: int32
        executorType:
          type: string
          enum:
          - LOCAL
          - REMOTE_SSM
          - AGENT
        location:
          type: string
    RuleInfo:
      type: object
      properties:
        id:
          type: integer
          format: int64
        submitTime:
          type: integer
          format: int64
        ruleText:
          type: string
        state:
          type: string
          enum:
          - "RuleState{value=0} ACTIVE"
          - "RuleState{value=1} NEW"
          - "RuleState{value=2} DISABLED"
          - "RuleState{value=3} FINISHED"
          - "RuleState{value=4} DELETED"
        numChecked:
          type: integer
          format: int64
        numCmdsGen:
          type: integer
          format: int64
        lastCheckTime:
          type: integer
          format: int64
    CmdletInfo:
      type: object
      properties:
        cid:
          type: integer
          format: int64
        rid:
          type: integer
          format: int64
        aids:
          type: array
          items:
            type: integer
            format: int64
        state:
          type: string
          enum:
          - "CmdletState{value=0} NOTINITED"
          - "CmdletState{value=1} PENDING"
          - "CmdletState{value=2} SCHEDULED"
          - "CmdletState{value=3} DISPATCHED"
          - "CmdletState{value=4} EXECUTING"
          - "CmdletState{value=5} PAUSED"
          - "CmdletState{value=6} DRYRUN"
          - "CmdletState{value=7} CANCELLED"
          - "CmdletState{value=8} DISABLED"
          - "CmdletState{value=9} FAILED"
          - "CmdletState{value=10} DONE"
        parameters:
          type: string
        generateTime:
          type: integer
          format: int64
        stateChangedTime:
          type: integer
          format: int64
        deferedToTime:
          type: integer
          format: int64
        aidsString:
          type: array
          items:
            type: string
    CmdletGroup:
      type: object
      properties:
        cmdlets:
          type: array
          items:
            $ref: '#/components/schemas/CmdletInfo'
        totalNumOfCmdlets:
          type: integer
          format: int64
    DetailedRuleInfo:
      type: object
      properties:
        id:
          type: integer
          format: int64
        submitTime:
          type: integer
          format: int64
        ruleText:
          type: string
        state:
          type: string
          enum:
          - "RuleState{value=0} ACTIVE"
          - "RuleState{value=1} NEW"
          - "RuleState{value=2} DISABLED"
          - "RuleState{value=3} FINISHED"
          - "RuleState{value=4} DELETED"
        numChecked:
          type: integer
          format: int64
        numCmdsGen:
          type: integer
          format: int64
        lastCheckTime:
          type: integer
          format: int64
        baseProgress:
          type: integer
          format: int64
        runningProgress:
          type: integer
          format: int64
    Utilization:
      type: object
      properties:
        timeStamp:
          type: integer
          format: int64
        total:
          type: integer
          format: int64
        used:
          type: integer
          format: int64
    NodeInfo:
      type: object
      properties:
        id:
          type: string
        host:
          type: string
        port:
          type: integer
          format: int32
        executorType:
          type: string
          enum:
          - LOCAL
          - REMOTE_SSM
          - AGENT
        location:
          type: string
    NodeCmdletMetrics:
      type: object
      properties:
        nodeInfo:
          $ref: '#/components/schemas/NodeInfo'
        registTime:
          type: integer
          format: int64
        numExecutors:
          type: integer
          format: int32
        cmdletsExecuted:
          type: integer
          format: int64
        cmdletsInExecution:
          type: integer
          format: int32
    FileAccessInfo:
      type: object
      properties:
        fid:
          type: integer
          format: int64
        path:
          type: string
        accessCount:
          type: integer
          format: int32
    FileInfo:
      type: object
      properties:
        path:
          type: string
        fileId:
          type: integer
          format: int64
        length:
          type: integer
          format: int64
        isdir:
          type: boolean
        blockReplication:
          type: integer
          format: int32
        blocksize:
          type: integer
          format: int64
        modificationTime:
          type: integer
          format: int64
        accessTime:
          type: integer
          format: int64
        permission:
          type: integer
          format: int32
        owner:
          type: string
        group:
          type: string
        storagePolicy:
          type: string
          format: byte
        erasureCodingPolicy:
          type: string
          format: byte
    CachedFileStatus:
      type: object
      properties:
        fid:
          type: integer
          format: int64
        path:
          type: string
        fromTime:
          type: integer
          format: int64
        lastAccessTime:
          type: integer
          format: int64
        numAccessed:
          type: integer
          format: int32
    ActionInfo:
      type: object
      properties:
        actionId:
          type: integer
          format: int64
        cmdletId:
          type: integer
          format: int64
        actionName:
          type: string
        args:
          type: object
          additionalProperties:
            type: string
        result:
          type: string
        log:
          type: string
        execHost:
          type: string
        successful:
          type: boolean
        createTime:
          type: integer
          format: int64
        finished:
          type: boolean
        finishTime:
          type: integer
          format: int64
        progress:
          type: number
          format: float
        argsJsonString:
          type: string
        oldFileIds:
          type: array
          items:
            type: integer
            format: int64
        argsFromJsonString:
          type: string
          writeOnly: true
    ActionGroup:
      type: object
      properties:
        actions:
          type: array
          items:
            $ref: '#/components/schemas/ActionInfo'
        totalNumOfActions:
          type: integer
          format: int64
    ActionDescriptor:
      type: object
      properties:
        actionName:
          type: string
        displayName:
          type: string
        usage:
          type: string
        comment:
          type: string
    DetailedFileAction:
      type: object
      properties:
        actionId:
          type: integer
          format: int64
        cmdletId:
          type: integer
          format: int64
        actionName:
          type: string
        args:
          type: object
          additionalProperties:
            type: string
        result:
          type: string
        log:
          type: string
        execHost:
          type: string
        successful:
          type: boolean
        createTime:
          type: integer
          format: int64
        finished:
          type: boolean
        finishTime:
          type: integer
          format: int64
        progress:
          type: number
          format: float
        filePath:
          type: string
        fileLength:
          type: integer
          format: int64
        src:
          type: string
        target:
          type: string
        argsJsonString:
          type: string
        oldFileIds:
          type: array
          items:
            type: integer
            format: int64
        argsFromJsonString:
          type: string
          writeOnly: true
    DetailedFileActionGroup:
      type: object
      properties:
        detailedFileActions:
          type: array
          items:
            $ref: '#/components/schemas/DetailedFileAction'
        totalNumOfActions:
          type: integer
          format: int64
