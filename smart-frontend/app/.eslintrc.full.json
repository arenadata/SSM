{
  "settings": {
    "import/resolver": {
      "alias": {
        "map": [
          ["@api", "./src/api/"],
          ["@constants", "./src/constants"],
          ["@hooks", "./src/hooks/"],
          ["@layouts", "./src/components/layouts"],
          ["@models", "./src/models/"],
          ["@pages", "./src/components/pages/"],
          ["@routes", "./src/routes/"],
          ["@store", "./src/store/"],
          ["@uikit", "./src/components/uikit/"],
          ["@utils", "./src/utils/"],
          ["@commonComponents", "./src/components/common"]
        ],
        "extensions": [".ts", ".tsx", ".json"]
      }
    }
  },
  "plugins": ["import"],
  "extends": ["./.eslintrc.json", "plugin:import/errors", "plugin:import/warnings", "plugin:import/typescript"],
  "rules": {
    "import/no-unresolved": ["error", { "ignore": ["\\.svg\\?react$"] }],
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 10,
        "ignoreExternal": true
      }
    ],
    "no-restricted-imports": "off",
    "@typescript-eslint/no-restricted-imports": [
      "error",
      {
        "paths": [
          {
            "name": "react-redux",
            "importNames": ["useSelector", "useDispatch"],
            "message": "Use typed `useStore` and `useDispatch` from '@hooks' instead."
          },
          {
            "name": "@reduxjs/toolkit",
            "importNames": ["createAsyncThunk"],
            "message": "Use typed `createAsyncThunk` from '@store/redux' instead."
          }
        ]
      }
    ],
    "no-console": [
      "error",
      {
        "allow": ["info", "warn", "error"]
      }
    ]
  }
}
